@import '../../../../../style.scss';

.Title {
  font-size: 0.9em;
  font-style: italic;
  font-weight: bold;
  color: $scanrgreyColor;
  padding-left: 0;
  padding-bottom: 0;
}

.Item {
  color: $scanrgreyColor;
  font-size: 0.9rem;
}

.FacetsCounts {
  color: $scanrgreyColor;
  font-size: 0.8em;
  font-style: italic;
}

.SearchButton {
  background-color: transparent !important;
  border: 0;
  cursor: pointer;
}

.SearchIcon {
  color: $scanrgreyColor;
  font-size: 1.2em;
}

.NoStyleButton {
  border: 0;
  background-color: transparent;
  font-style: italic;
  text-decoration: underline;
  cursor: pointer;
  color: $scanrblueColor;
}

.NoStyleButton:hover, .NoStyleButton:focus {
  text-decoration: underline;
}

/* Customize the label (the CheckBox) */
.CheckBox {
  border-radius: 3px;
  display: block;
  position: relative;
  padding-left: 16px;
  margin-bottom: 15px;
  cursor: pointer;
  font-size: 1.2em;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.disabledCheckBox {
  cursor: default;
  opacity: 0.2;
}
.disabledCheckBox:hover {
  cursor: default;
  opacity: 1;
}

/* Hide the browser's default checkbox */
.CheckBox INPUT {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.CheckMark {
  border-radius: 3px;
  position: absolute;
  top: 0;
  left: 0;
  height: 16px;
  width: 16px;
  background-color: $scanrfooterBgColor;
}

/* On mouse-over, add a grey background color */
.CheckBox:hover INPUT ~ .CheckMark {
  opacity: 0.2;
}

/* When the checkbox is checked, add a blue background */
.CheckBox INPUT:checked ~ .CheckMark {
  background-color: white;
}

/* Create the CheckMark/indicator (hidden when not checked) */
.CheckMark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the CheckMark when checked */
.CheckBox INPUT:checked ~ .CheckMark:after {
  display: block;
}

/* Style the CheckMark/indicator */
.CheckBox .CheckMark:after {
  left: 6px;
  top: 2px;
  width: 5px;
  height: 10px;
  border: solid $scanrfooterBgColor;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

.Autocomplete {
  margin: 0 !important;
  padding: 0;
}
// max-height: 300px;
// overflow-y: auto;

.AutocompleteFull {
  background-color: $scanrblueColor;
  color: white;
  border-radius: 5px;
  box-shadow: 0px 0px 4px $scanrmiddlegreyColor;
}
.Autocomplete::-webkit-scrollbar {
  width: 10px;
  height: 10px;
  -webkit-border-radius: 10px;
  background-color: $scanrlightgreyColor;
}

.Autocomplete::-webkit-scrollbar-thumb {
  background-color: $scanrfooterBgColor;
  border: solid 0 transparent;
  border-right-width: 1px;
  border-left-width: 1px;
  -webkit-border-radius: 10px;
  -webkit-box-shadow: inset 0 0 0 1px $scanrfooterBgColor, inset 0 0 0 6px $scanrfooterBgColor;
}

.Suggestion {
  list-style-type: none;
  color: white;
}

.Suggestion:hover {
  color: $scanrfooterBgColor;
}
